//-------------------------------------------------------------------------------------------------
// File : asdxResTexture.h
// Desc : Texture Resource Module.
// Copyright(c) Project Asura. All right reserved.
//-------------------------------------------------------------------------------------------------

#ifndef __ASDX_RES_TEXTURE_H__
#define __ASDX_RES_TEXTURE_H__

//-------------------------------------------------------------------------------------------------
// Includes
//-------------------------------------------------------------------------------------------------
#include <asdxTypedef.h>


namespace asdx {

///////////////////////////////////////////////////////////////////////////////////////////////////
// SUBRESOURCE_OPTION enum
///////////////////////////////////////////////////////////////////////////////////////////////////
enum SUBRESOURCE_OPTION
{
    SUBRESOURCE_OPTION_CUBEMAP = 0x1 << 0,      //!< キューブマップです.
    SUBRESOURCE_OPTION_VOLUME  = 0x1 << 1,      //!< ボリュームテクスチャです.
};

///////////////////////////////////////////////////////////////////////////////////////////////////
// SubResource structure
///////////////////////////////////////////////////////////////////////////////////////////////////
struct SubResource
{
    u32     Width;          //!< 横幅です.
    u32     Height;         //!< 縦幅です.
    u32     Pitch;          //!< 1行当たりのバイト数です.
    u32     SlicePitch;     //!< 1スライス当たりのバイト数です(つまり，テクセルデータのバイト数).
    u8*     pPixels;        //!< テクセルデータです.

    //---------------------------------------------------------------------------------------------
    //! @brief      コンストラクタです.
    //---------------------------------------------------------------------------------------------
    SubResource()
    : Width     ( 0 )
    , Height    ( 0 )
    , Pitch     ( 0 )
    , SlicePitch( 0 )
    , pPixels   ( nullptr )
    { /* DO_NOTHING */ }

    //---------------------------------------------------------------------------------------------
    //! @brief      解放処理を行います.
    //---------------------------------------------------------------------------------------------
    void Release()
    { ASDX_DELETE_ARRAY( pPixels ); }

};


///////////////////////////////////////////////////////////////////////////////////////////////////
// ResTexture structure
///////////////////////////////////////////////////////////////////////////////////////////////////
struct ResTexture
{
    u32             Width;          //!< 画像の横幅です.
    u32             Height;         //!< 画像の縦幅です.
    u32             Depth;          //!< 画像の奥行です.
    u32             Format;         //!< 画像のフォーマットです.
    u32             MipMapCount;    //!< ミップマップ数です.
    u32             SurfaceCount;   //!< サーフェイス数です(1次元配列テクスチャ, 2次元配列テクスチャ, キューブマップの場合のみ1以上の数が入ります).
    u32             Option;         //!< オプションフラグです.
    SubResource*    pResources;     //!< サブリソースです.

    //---------------------------------------------------------------------------------------------
    //! @brief      コンストラクタです.
    //---------------------------------------------------------------------------------------------
    ResTexture()
    : Width         ( 0 )
    , Height        ( 0 )
    , Depth         ( 0 )
    , Format        ( 0 )
    , MipMapCount   ( 0 )
    , SurfaceCount  ( 0 )
    , Option        ( 0 )
    , pResources    ( nullptr )
    { /* DO_NOTHING */ }

    //---------------------------------------------------------------------------------------------
    //! @brief      解放処理を行います.
    //---------------------------------------------------------------------------------------------
    void Release()
    {
        u32 mipCount = ( MipMapCount > 0 ) ? MipMapCount : 1;

        for( u32 i=0; i<SurfaceCount * mipCount; ++i )
        { pResources[i].Release(); }

        ASDX_DELETE_ARRAY( pResources )
    }

    //---------------------------------------------------------------------------------------------
    //! @brief      ファイルからテクスチャリソースを生成します.
    //!             読み込み可能なファイルはDDS, BMP, JPG, PNG, TIFF, GIF, HDP, MAPです.
    //!
    //! @param[in]      filename        ファイル名です.
    //! @retval true    リソース生成に成功.
    //! @retval false   リソース生成に失敗.
    //---------------------------------------------------------------------------------------------
    bool LoadFromFile( const char16* filename );

    //---------------------------------------------------------------------------------------------
    //! @brief      メモリストリームからテクスチャリソースを生成します.
    //!             メモリストリームの形式は DDS, BMP, JPG, PNG, TIFF, GIF, HDP, MAP である必要があります.
    //!
    //! @param[in]      pBuffer         バッファです.
    //! @param[in]      bufferSize      バッファサイズです.
    //! @retval true    リソース生成に成功.
    //! @retval false   リソース生成に失敗.
    //---------------------------------------------------------------------------------------------
    bool LoadFromMemory( const u8* pBuffer, const u32 bufferSize );
};


//-------------------------------------------------------------------------------------------------
//! @brief      ダミーテクスチャを生成します.
//!
//! @retval true    リソース生成に成功.
//! @retval false   リソース生成に失敗.
//-------------------------------------------------------------------------------------------------
bool CreateDummyResTexture( asdx::ResTexture& resTexure );


} // namespace asdx

#endif//__ASDX_RES_TEXTURE_H__
