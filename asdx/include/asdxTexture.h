//-------------------------------------------------------------------------------------------------
// File : asdxTexture.h
// Desc : Texture Module.
// Copyright(c) Project Asura. All right reserved.
//-------------------------------------------------------------------------------------------------

#ifndef __ASDX_TEXTURE_H__
#define __ASDX_TEXTURE_H__

//-------------------------------------------------------------------------------------------------
// Includes
//-------------------------------------------------------------------------------------------------
#include <asdxTypedef.h>
#include <asdxRef.h>
#include <asdxResTexture.h>
#include <d3d11.h>


namespace asdx {

///////////////////////////////////////////////////////////////////////////////////////////////////
// Texture2D class
///////////////////////////////////////////////////////////////////////////////////////////////////
class Texture2D
{
    //=============================================================================================
    // list of friend classes and methods.
    //=============================================================================================
    /* NOTHING */

public:
    //=============================================================================================
    // public variables.
    //=============================================================================================
    /* NOTHING */

    //=============================================================================================
    // pubic methods.
    //=============================================================================================

    //---------------------------------------------------------------------------------------------
    //! @brief      コンストラクタです.
    //---------------------------------------------------------------------------------------------
    Texture2D();

    //---------------------------------------------------------------------------------------------
    //! @brief      コピーコンストラクタです.
    //!
    //! @param[in]      value       コピー元の値です.
    //---------------------------------------------------------------------------------------------
    Texture2D( const Texture2D& value );

    //---------------------------------------------------------------------------------------------
    //! @brief      デストラクタです.
    //---------------------------------------------------------------------------------------------
    virtual ~Texture2D();

    //---------------------------------------------------------------------------------------------
    //! @brief      テクスチャを生成します.
    //!
    //! @param [in]     pDevice         デバイスです.
    //! @param [in]     pDeviceContext  デバイスコンテキストです.
    //! @param [in]     resource        リソーステクスチャです.
    //! @retval true    生成に成功.
    //! @retval false   生成に失敗.
    //---------------------------------------------------------------------------------------------
    bool Create( ID3D11Device* pDevice, ID3D11DeviceContext* pDeviceContext, const ResTexture& resource );

    //---------------------------------------------------------------------------------------------
    //! @brief      メモリ解放処理です.
    //---------------------------------------------------------------------------------------------
    void Release();

    //---------------------------------------------------------------------------------------------
    //! @brief      フォーマットを取得します.
    //!
    //! @return     フォーマットを返却します.
    //---------------------------------------------------------------------------------------------
    int GetFormat() const;

    //---------------------------------------------------------------------------------------------
    //! @brief      テクスチャを取得します.
    //!
    //! @return     テクスチャを返却します.
    //---------------------------------------------------------------------------------------------
    ID3D11Texture2D*            GetTexture();

    //---------------------------------------------------------------------------------------------
    //! @brief      シェーダリソースビューを取得します.
    //!
    //! @return     シェーダリソースビューを返却します.
    //---------------------------------------------------------------------------------------------
    ID3D11ShaderResourceView*   GetSRV();

    //---------------------------------------------------------------------------------------------
    //! @brief      代入演算子です.
    //!
    //! @param[in]      value           代入する値です.
    //! @return     代入結果を返却します.
    //---------------------------------------------------------------------------------------------
    Texture2D& operator = ( const Texture2D& value );

protected:
    //=============================================================================================
    // protected variables
    //=============================================================================================
    DXGI_FORMAT                              m_Format;           //!< フォーマットです.
    asdx::RefPtr<ID3D11Texture2D>            m_pTexture;         //!< テクスチャです.
    asdx::RefPtr<ID3D11ShaderResourceView>   m_pSRV;             //!< シェーダリソースビューです.

    //=============================================================================================
    // protected methods.
    //=============================================================================================
    /* NOTHING */

private:
    //=============================================================================================
    // private variables.
    //=============================================================================================
    /* NOTHING */

    //=============================================================================================
    // private methods.
    //=============================================================================================
    /* NOTHING */
};


///////////////////////////////////////////////////////////////////////////////////////////////////
// Texture3D class
///////////////////////////////////////////////////////////////////////////////////////////////////
class Texture3D
{
    //=============================================================================================
    // list of friend classes and methods.
    //=============================================================================================
    /* NOTHING */

public:
    //=============================================================================================
    // public variables.
    //=============================================================================================
    /* NOTHING */

    //=============================================================================================
    // pubic methods.
    //=============================================================================================

    //---------------------------------------------------------------------------------------------
    //! @brief      コンストラクタです.
    //---------------------------------------------------------------------------------------------
    Texture3D();

    //---------------------------------------------------------------------------------------------
    //! @brief      デストラクタです.
    //---------------------------------------------------------------------------------------------
    virtual ~Texture3D();

    //---------------------------------------------------------------------------------------------
    //! @brief      テクスチャを生成します.
    //!
    //! @param [in]     pDevice         デバイスです.
    //! @param [in]     pDeviceContext  デバイスコンテキストです.
    //! @param [in]     resource        リソーステクスチャです.
    //! @retval true    生成に成功.
    //! @retval false   生成に失敗.
    //---------------------------------------------------------------------------------------------
    bool Create( ID3D11Device* pDevice, ID3D11DeviceContext* pDeviceContext, const ResTexture& resource );

    //---------------------------------------------------------------------------------------------
    //! @brief      メモリ解放処理です.
    //---------------------------------------------------------------------------------------------
    void Release();

    //---------------------------------------------------------------------------------------------
    //! @brief      フォーマットを取得します.
    //!
    //! @return     フォーマットを返却します.
    //---------------------------------------------------------------------------------------------
    int GetFormat() const;

    //---------------------------------------------------------------------------------------------
    //! @brief      テクスチャを取得します.
    //!
    //! @return     テクスチャを返却します.
    //---------------------------------------------------------------------------------------------
    ID3D11Texture3D*            GetTexture();

    //---------------------------------------------------------------------------------------------
    //! @brief      シェーダリソースビューを取得します.
    //!
    //! @return     シェーダリソースビューを返却します.
    //---------------------------------------------------------------------------------------------
    ID3D11ShaderResourceView*   GetSRV();

    //---------------------------------------------------------------------------------------------
    //! @brief      代入演算子です.
    //!
    //! @param[in]      value       代入する値です.
    //! @return     代入結果を返却します.
    //---------------------------------------------------------------------------------------------
    Texture3D& operator = ( const Texture3D& value );

protected:
    //=============================================================================================
    // protected variables
    //=============================================================================================
    DXGI_FORMAT                              m_Format;           //!< フォーマットです.
    asdx::RefPtr<ID3D11Texture3D>            m_pTexture;         //!< テクスチャです.
    asdx::RefPtr<ID3D11ShaderResourceView>   m_pSRV;             //!< シェーダリソースビューです.

    //=============================================================================================
    // protected methods.
    //=============================================================================================
    /* NOTHING */

private:
    //=============================================================================================
    // private variables.
    //=============================================================================================
    /* NOTHING */

    //=============================================================================================
    // private methods.
    //=============================================================================================
    /* NOTHING */
};

} // namespace asdx

#endif//__ASDX_TEXTURE_H__
